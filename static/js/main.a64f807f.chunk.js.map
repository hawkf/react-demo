{"version":3,"sources":["const.js","logo.svg","form.jsx","App.js","reportWebVitals.js","index.js"],"names":["questions","title","description","blockId","questionElements","questionName","text","Form","props","changeQuestionHandler","questionRefs","useRef","class","map","index","for","ref","placeholder","type","id","onClick","evt","preventDefault","defaultSum","forEach","console","log","isNaN","current","value","parseFloat","swal","App","useState","blockIndex","setBlockIndex","formQuestion","find","element","className","src","alt","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAaA,GCAE,I,MDAU,CACvB,CACEC,MAAO,wFACPC,YAAa,8SACbC,QAAS,EACTC,iBAAkB,CAChB,CACEC,aAAc,IACdC,KAAM,4SAER,CACED,aAAc,IACdC,KAAM,uaAER,CACED,aAAc,IACdC,KAAM,mcAER,CACED,aAAc,IACdC,KAAM,2VAIZ,CACEL,MAAO,wFACPC,YAAa,6IACbC,QAAS,EACTC,iBAAkB,CAChB,CACEC,aAAc,IACdC,KAAM,oRAER,CACED,aAAc,IACdC,KAAM,qZAER,CACED,aAAc,IACdC,KAAM,oSAER,CACED,aAAc,IACdC,KAAM,kQ,uBEvCP,SAASC,EAAKC,GACnB,IAAOJ,EAA2CI,EAA3CJ,iBAAkBK,EAAyBD,EAAzBC,sBAOjBC,EAAe,CALHC,mBACAA,mBACAA,mBACAA,oBA6BlB,OACQ,uBAAMC,MAAM,eAAZ,UACKR,EAAiBS,KAAI,WAAuBC,GAAW,IAAhCT,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,KAAkB,OACrD,sBAAKM,MAAM,sBAAX,UACA,uBAAOA,MAAM,sBAAsBG,IAAKV,EAAxC,wDAAiEA,KACjE,sBAAKO,MAAM,gCAAX,UACA,uBAAOI,IAAKN,EAAaI,GAAQG,YAAY,IAAIL,MAAM,sBAAsBM,KAAK,SAASC,GAAId,IAC/F,wEAEI,mBAAGO,MAAM,4BAAT,SAAsCN,UAG7C,wBAAQc,QApCI,SAACC,GAErBA,EAAIC,iBACJ,IAAIC,EAAa,EAEjBb,EAAac,SAAQ,SAACR,GAClBS,QAAQC,KAAKC,MAAMX,EAAIY,QAAQC,QACN,KAAtBb,EAAIY,QAAQC,OAAiBF,MAAMX,EAAIY,QAAQC,SAChDN,GAA0BO,WAAWd,EAAIY,QAAQC,WAIvDJ,QAAQC,IAAIH,GAEM,KAAfA,GAIHb,EAAac,SAAQ,SAACR,GACpBA,EAAIY,QAAQC,MAAQ,MAEtBpB,KANIsB,IAAK,kRAqBiCb,KAAK,SAASN,MAAM,uBAAtD,4GCNDoB,MAtCf,WACE,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAepC,EAAUqC,MAAK,SAACC,GACnC,OAAOA,EAAQnC,UAAY+B,KAS7B,OACE,qCACE,yBAAQK,UAAU,cAAlB,UACE,8BACE,qBAAKC,IAAI,wBAAwBC,IAAI,kGAEvC,mBAAGF,UAAU,uBAAb,skBAKF,uBAAM3B,MAAM,iBAAZ,UACE,mBAAGA,MAAM,wBAAT,SAAkCwB,EAAanC,QAC/C,mBAAGW,MAAM,0BAAT,SAAoCwB,EAAalC,cAE/C,cAACK,EAAD,CACEH,iBAAkBgC,EAAahC,iBAC/BK,sBAAuB,WAtB3ByB,EAAa,EAAIlC,EAAU0C,QAC7BP,EAAcD,EAAa,aCJlBS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a64f807f.chunk.js","sourcesContent":["export const questions = [\r\n  {\r\n    title: \"Первое суждение\",\r\n    description: \"Я полагаю, что мог внести большой вклад на такой работе где\",\r\n    blockId: 0,\r\n    questionElements: [\r\n      {\r\n        questionName: \"1\",\r\n        text: \"а) хорошая заработная плата и прочие виды вознаграждения\",\r\n      },\r\n      {\r\n        questionName: \"2\",\r\n        text: \"b) имеется возможность установить хорошие взаимоотношения с коллегами на работе\",\r\n      },\r\n      {\r\n        questionName: \"3\",\r\n        text: \"c) я мог бы влиять на принятие решений и демонстрировать свои достоинства как работника\",\r\n      },\r\n      {\r\n        questionName: \"4\",\r\n        text: \"d) у меня есть возможность совершенствоваться и расти как личность\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Второе суждение\",\r\n    description: \"Я не хотел работать там, где\",\r\n    blockId: 1,\r\n    questionElements: [\r\n      {\r\n        questionName: \"1\",\r\n        text: \"а) отсутствуют чёткие указания что от меня требуется\",\r\n      },\r\n      {\r\n        questionName: \"2\",\r\n        text: \"b) практически отсутствует обратна связь об оценке эффективности моей работы\",\r\n      },\r\n      {\r\n        questionName: \"3\",\r\n        text: \"c) то, чем я занимаюсь, выглядит малополезным и малоценным\",\r\n      },\r\n      {\r\n        questionName: \"4\",\r\n        text: \"d) плохие условия работы, слишком шумно или грязно\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useRef} from 'react'\r\nimport {questions} from './const';\r\nimport swal from 'sweetalert';\r\n\r\nexport function Form(props) {\r\n  const {questionElements, changeQuestionHandler} = props;\r\n\r\n    const question1 = useRef();\r\n    const question2 = useRef();\r\n    const question3 = useRef();\r\n    const question4 = useRef();\r\n\r\n    const questionRefs = [question1, question2, question3, question4];\r\n    \r\n\r\n    const onSubmitHandler = (evt) => {\r\n\r\n        evt.preventDefault();\r\n        let defaultSum = 0;\r\n        \r\n        questionRefs.forEach((ref) => {\r\n            console.log(!isNaN(ref.current.value));\r\n            if(ref.current.value !== '' && !isNaN(ref.current.value)) {\r\n              defaultSum = defaultSum + parseFloat(ref.current.value);\r\n             }\r\n        })\r\n\r\n        console.log(defaultSum);\r\n\r\n        if(defaultSum !== 11) {\r\n            swal('Cума балов не равна 11. Необходимо сделать исправления');\r\n            return;\r\n        }\r\n        questionRefs.forEach((ref) => {\r\n          ref.current.value = '';\r\n      });\r\n        changeQuestionHandler();\r\n    }\r\n\r\n    return (        \r\n            <form class=\"qustion-form\">\r\n                {questionElements.map(({questionName, text}, index) => {return (\r\n                   <div class=\"qustion-form__block\">\r\n                   <label class=\"qustion-form__label\" for={questionName}>{`Ответ №${questionName}`}</label>\r\n                   <div class=\"qustion-form__input-container\">\r\n                   <input ref={questionRefs[index]} placeholder='0' class=\"qustion-form__input\" type=\"number\" id={questionName}/>\r\n                   <p>Баллов</p>\r\n                   </div>\r\n                       <p class=\"qustion-form__description\">{text}</p>                       \r\n               </div>\r\n                )} )}                \r\n                <button onClick={onSubmitHandler} type=\"submit\" class=\"qustion-form__button\">Наступне питання</button>\r\n            </form>\r\n        );\r\n}\r\n","import logo from \"./logo.svg\";\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport { questions } from \"./const\";\nimport swal from \"sweetalert\";\nimport { Form } from \"./form\";\n\nfunction App() {\n  const [blockIndex, setBlockIndex] = useState(0);\n\n  const formQuestion = questions.find((element) => {\n    return element.blockId === blockIndex;\n  });\n\n  const changeQuestion = () => {\n    if (blockIndex + 1 < questions.length) {\n      setBlockIndex(blockIndex + 1);\n    }\n  };\n\n  return (\n    <>\n      <header className='page-header'>\n        <div>\n          <img src='./img/logoCompany.png' alt='Логотип компании' />\n        </div>\n        <p className='page-header__history'>\n          Чверть століття тому було покладено початок великого шляху. Сьогодні\n          ми також сміливі, як і на самому початку.\n        </p>\n      </header>\n      <main class='main-container'>\n        <p class='main-container__title'>{formQuestion.title}</p>\n        <p class='main-container__qustion'>{formQuestion.description}</p>\n        {\n          <Form\n            questionElements={formQuestion.questionElements}\n            changeQuestionHandler={() => changeQuestion()}\n          />\n        }\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}