{"version":3,"sources":["const.js","form.jsx","main-page.jsx","App.js","reportWebVitals.js","index.js"],"names":["AppRoute","questions","title","description","blockId","questionElements","questionName","text","elementId","Form","props","changeQuestionHandler","questionRefs","useRef","className","map","index","htmlFor","ref","placeholder","type","id","onClick","evt","preventDefault","defaultSum","forEach","console","log","isNaN","current","value","parseFloat","axios","get","name","parceToUrl","then","response","data","swal","MainPage","useState","blockIndex","setBlockIndex","useParams","formQuestion","find","element","src","alt","length","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f7a9a3e.chunk.js","sourcesContent":["export const AppRoute = {\r\n  ROOT: \"/:id?\",\r\n};\r\nexport const parceToUrl = (elementId, name) => {\r\n  return `&ELEMENT_CODE=${elementId}&FIELDS%5BNAME%5D=${name}`;\r\n};\r\n\r\nexport const questions = [\r\n  {\r\n    title: \"Первое суждение\",\r\n    description: \"Я полагаю, что мог внести большой вклад на такой работе где\",\r\n    blockId: 0,\r\n    questionElements: [\r\n      {\r\n        questionName: \"1\",\r\n        text: \"а) хорошая заработная плата и прочие виды вознаграждения\",\r\n      },\r\n      {\r\n        questionName: \"2\",\r\n        text: \"b) имеется возможность установить хорошие взаимоотношения с коллегами на работе\",\r\n      },\r\n      {\r\n        questionName: \"3\",\r\n        text: \"c) я мог бы влиять на принятие решений и демонстрировать свои достоинства как работника\",\r\n      },\r\n      {\r\n        questionName: \"4\",\r\n        text: \"d) у меня есть возможность совершенствоваться и расти как личность\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"Второе суждение\",\r\n    description: \"Я не хотел работать там, где\",\r\n    blockId: 1,\r\n    questionElements: [\r\n      {\r\n        questionName: \"1\",\r\n        text: \"а) отсутствуют чёткие указания что от меня требуется\",\r\n      },\r\n      {\r\n        questionName: \"2\",\r\n        text: \"b) практически отсутствует обратна связь об оценке эффективности моей работы\",\r\n      },\r\n      {\r\n        questionName: \"3\",\r\n        text: \"c) то, чем я занимаюсь, выглядит малополезным и малоценным\",\r\n      },\r\n      {\r\n        questionName: \"4\",\r\n        text: \"d) плохие условия работы, слишком шумно или грязно\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, {useRef} from 'react'\r\nimport {questions, parceToUrl} from './const';\r\nimport swal from 'sweetalert';\r\nimport axios  from 'axios';\r\n\r\nconst baseUrl = 'https://my.agromat.ua/rest/893/eh1mpd7uf8uy4bzg/lists.element.add?IBLOCK_TYPE_ID=lists&IBLOCK_ID=55';\r\n\r\nlet elementId = '1';\r\n\r\nexport function Form(props) {\r\n  const {questionElements, changeQuestionHandler} = props;\r\n\r\n    const question1 = useRef();\r\n    const question2 = useRef();\r\n    const question3 = useRef();\r\n    const question4 = useRef();\r\n\r\n    const questionRefs = [question1, question2, question3, question4];\r\n    \r\n\r\n    const onSubmitHandler = (evt) => {\r\n\r\n        evt.preventDefault();\r\n        let defaultSum = 0;\r\n        \r\n        questionRefs.forEach((ref) => {\r\n            console.log(!isNaN(ref.current.value));\r\n            if(ref.current.value !== '' && !isNaN(ref.current.value)) {\r\n              defaultSum = defaultSum + parseFloat(ref.current.value);\r\n             }\r\n        })\r\n\r\n        console.log(defaultSum);\r\n\r\n        if(defaultSum !== 11) {\r\n            swal('Cума балов не равна 11. Необходимо сделать исправления');\r\n            return;\r\n        }\r\n        questionRefs.forEach((ref) => {\r\n          ref.current.value = '';\r\n      });\r\n        \r\n        axios.get(`${baseUrl}${parceToUrl(elementId, `test${elementId}`)}`)\r\n          .then(response => console.log(response.data));\r\n        elementId = elementId + 1;  \r\n        changeQuestionHandler();\r\n    }\r\n\r\n    return (        \r\n            <form className=\"qustion-form\">\r\n                {questionElements.map(({questionName, text}, index) => {return (\r\n                   <div key={index} className=\"qustion-form__block\">\r\n                   <label className=\"qustion-form__label\" htmlFor={questionName}>{`Ответ №${questionName}`}</label>\r\n                   <div className=\"qustion-form__input-container\">\r\n                   <input ref={questionRefs[index]} placeholder='0' className=\"qustion-form__input\" type=\"number\" id={questionName}/>\r\n                   <p>Баллов</p>\r\n                   </div>\r\n                       <p className=\"qustion-form__description\">{text}</p>                       \r\n               </div>\r\n                )} )}                \r\n                <button onClick={onSubmitHandler} type=\"submit\" className=\"qustion-form__button\">Наступне питання</button>\r\n            </form>\r\n        );\r\n}\r\n","import {React, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { questions } from \"./const\";\r\nimport { Form } from \"./form\";\r\n\r\nexport const MainPage = () => {\r\n  const [blockIndex, setBlockIndex] = useState(0);\r\n\r\n  const {id} = useParams();\r\n  console.log(id);\r\n\r\n  const formQuestion = questions.find((element) => {\r\n    return element.blockId === blockIndex;\r\n  });\r\n\r\n  const changeQuestion = () => {\r\n    if (blockIndex + 1 < questions.length) {\r\n      setBlockIndex(blockIndex + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header className='page-header'>\r\n        <div>\r\n          <img src='./img/logoCompany.png' alt='Логотип компании' />\r\n        </div>\r\n        <p className='page-header__history'>\r\n          Чверть століття тому було покладено початок великого шляху. Сьогодні\r\n          ми також сміливі, як і на самому початку.\r\n        </p>\r\n      </header>\r\n      <main className='main-container'>\r\n        <p className='main-container__title'>{formQuestion.title}</p>\r\n        <p className='main-container__qustion'>{formQuestion.description}</p>\r\n        {\r\n          <Form\r\n            questionElements={formQuestion.questionElements}\r\n            changeQuestionHandler={() => changeQuestion()}\r\n          />\r\n        }\r\n      </main>\r\n    </>\r\n  );\r\n}","import React from \"react\";\nimport \"./App.css\";\nimport { MainPage } from \"./main-page\";\nimport { BrowserRouter, Route, Switch, HashRouter } from \"react-router-dom\";\nimport { AppRoute } from \"./const\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path={AppRoute.ROOT}>\n          <MainPage />\n        </Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}